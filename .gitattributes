from pathlib import Path

# Create recommended .gitignore for NovaOS (Python + LLM + VS Code environment)
gitignore = """
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Environment
.env
.venv/
venv/
ENV/
env/
*.env

# VS Code
.vscode/

# PyInstaller
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage
htmlcov/
.tox/
.nox/
.coverage
coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
.hypothesis/

# pytype
.pytype/

# mypy
.mypy_cache/

# Local files
*.log
logs/
*.sqlite3
*.db
*.pem
*.key

# Model + weight files
*.ckpt
*.pt
*.gguf
*.bin
*.safetensors
*.onnx
*.h5
*.tar
*.tar.gz
*.zip

# HuggingFace cache
~/.cache/huggingface/
**/.cache/huggingface/

# System files
.DS_Store
Thumbs.db

# Jupyter and notebooks
.ipynb_checkpoints

# LLM / AI tools
wandb/
"""

# Recommended .gitattributes to enforce LF endings and track binary files via Git LFS
gitattributes = """
# Force consistent line endings
* text=auto eol=lf

# Treat model and binary types as binary (LFS support)
*.gguf filter=lfs diff=lfs merge=lfs -text
*.pt filter=lfs diff=lfs merge=lfs -text
*.bin filter=lfs diff=lfs merge=lfs -text
*.safetensors filter=lfs diff=lfs merge=lfs -text
*.ckpt filter=lfs diff=lfs merge=lfs -text
*.onnx filter=lfs diff=lfs merge=lfs -text
*.h5 filter=lfs diff=lfs merge=lfs -text
*.tar filter=lfs diff=lfs merge=lfs -text
*.tar.gz filter=lfs diff=lfs merge=lfs -text
*.zip filter=lfs diff=lfs merge=lfs -text
*.pdf filter=lfs diff=lfs merge=lfs -text
*.png filter=lfs diff=lfs merge=lfs -text
*.jpg filter=lfs diff=lfs merge=lfs -text
*.jpeg filter=lfs diff=lfs merge=lfs -text
"""

# Write to files
Path(".gitignore").write_text(gitignore.strip())
Path(".gitattributes").write_text(gitattributes.strip())

